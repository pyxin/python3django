"""
Django settings for book project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%!4j)qvrrcb8vas)5b7+zy+^396w$!5(-%l(qvy@$pjdkf@9fi'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# 调试 关闭
ALLOWED_HOSTS = []
# 返回404


# Application definition
# 应用配置
INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'book_app',
)
# 中间件配置
MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',  # 启用session中间件  默认开启
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'book.urls'
# 模板配置
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 后端模板引擎  目录/data/virtual/py_django/lib/python3.5/site-packages/django/template/backends/django.py
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        # Django项目模板目录 按顺序查找   "根目录"+"templates"
        'APP_DIRS': True,
        # django是否可以去应用目录下查找模板文件
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
"""
        但是我又发现一个新的问题，BASE_DIR 为什么就是/data/server/test1呢？
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        python中 __file__   表示获取到当前正在编辑的文件的名称。
        os.path.abspath(__file__) 得到当前文件的绝对路径
        os.path.dirname() 得到指定文件所在目录
        我们在后面的与目录有关的变量都用BASE_DIR，这样使得移植性更强
        梳理：__file__  就是我们正在编辑的文件
        __file__ 就是 我们正在编辑的settings.py文件
        os.path.abspath(__file__)就是获取这个文件的绝对路径
        os.path.abspath(__file__)就是  /data/server/test1/test1/settings.py
        os.path.dirname(os.path.abspath(__file__))可以理解为settings.py文件所在的目录
        os.path.dirname(os.path.abspath(__file__))就是 /data/server/test1/test1
        os.path.dirname(os.path.dirname(os.path.abspath(__file__))) 就是获取上一级目录
        os.path.dirname(os.path.dirname(os.path.abspath(__file__)))就是 /data/server/test1
        所以说 BASE_ DIR就是我们的项目根路径 /data/server/test1
"""

WSGI_APPLICATION = 'book.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'bookdb',
        'Host': 'localhost',
        'PORT': '3306',
        'USER': 'root',
        'PASSWORD': 'xin123456',
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

# LANGUAGE_CODE = 'en-us'
# 默认语言编码
LANGUAGE_CODE = 'zh-Hans'

# TIME_ZONE = 'UTC'
# 时间区域
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,"static"),
]
MEDIA_ROOT = os.path.join(BASE_DIR, "static/media")  # 定义一个变量用于拼接字符串目录
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
# 设置session设置方式默认存储在数据库  db改cache存在缓存